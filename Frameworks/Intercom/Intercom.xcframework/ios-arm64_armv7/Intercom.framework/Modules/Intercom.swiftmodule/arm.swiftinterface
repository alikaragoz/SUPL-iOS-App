// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Intercom
import Foundation
@_exported import Intercom
import Intercom_Private
import Swift
import UIKit
import _Concurrency
import os.log
import os
@objc public protocol HelpCenterStartConversationViewDelegate {
  @objc func didSelectStartConversation()
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class HelpCenterStartConversationView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) weak public var startConversationDelegate: HelpCenterStartConversationViewDelegate?
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class StartConversationCard : ConversationCard {
  @_Concurrency.MainActor(unsafe) @objc override public init(cardInfo: ConversationCardInfoProtocol, delegate: ConversationCardDelegate)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(ICMSearchBrowseView) @_Concurrency.MainActor(unsafe) public class SearchBrowseView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public convenience init(frame: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) public init(_ frame: CoreGraphics.CGRect, _ config: Intercom_Private.ICMConfigProtocol = ICMConfig.shared())
  @objc @_Concurrency.MainActor(unsafe) public func searchHelpArticlesAction()
  @objc @_Concurrency.MainActor(unsafe) public func heightForCard(width: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class InboxCell : UIKit.UITableViewCell {
  @objc @_Concurrency.MainActor(unsafe) public func configure(name: Swift.String, sentTime: Foundation.Date, summary: Swift.String, adminsToShow: [Intercom_Private.ICMParticipant], unread: Swift.Bool, showDividerLine: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func traitCollectionDidChange(_ previousTraitCollection: UIKit.UITraitCollection?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class TouchTransparentCollectionView : UIKit.UICollectionView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func point(inside point: CoreGraphics.CGPoint, with event: UIKit.UIEvent?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreGraphics.CGRect, collectionViewLayout layout: UIKit.UICollectionViewLayout)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class HelpCenterDataService : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc public func fetchCollections(completion: @escaping ([HelpCenterCollection]?, Swift.Error?) -> Swift.Void)
  @objc public func fetchCollection(collectionId: Swift.String, completion: @escaping (HelpCenterCollectionContent?, Swift.Error?) -> Swift.Void)
  @objc public func searchResults(for searchTerm: Swift.String, completion: @escaping ([HelpCenterArticleSearchResult]?, Swift.Error?) -> Swift.Void)
  @objc deinit
}
@objc @objcMembers public class ArticleMetaData : ObjectiveC.NSObject {
  @objc public static var searchBrowseSource: Swift.String
  @objc public var articleId: Swift.String?
  @objc public var articleSource: Swift.String?
  @objc public init(id: Swift.String?, source: Swift.String?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class HelpCenterMetricService : ObjectiveC.NSObject {
  @objc public var contextIsSearchBrowse: Swift.Bool
  @objc public static func addSearchBrowseViewedEvent(homeScreenIndex: Swift.Int)
  @objc public static func addOpenedFromAPIEvent()
  @objc public static func addOpenedArticleFromAPIEvent()
  @objc public static func addOpenedFromConversationEvent()
  @objc public static func addOpenedFromInAppEvent()
  @objc public static func addOpenedFromLegacySearchAppEvent()
  @objc public static func addOpenedFromMessengerHomeAppEvent()
  @objc public static func addOpenedFromCarousel()
  @objc public static func addOpenedFromPushNotification()
  @objc public func addArticleViewedEvent()
  @objc public func addArticleFailedEvent(errorCode: Foundation.NSNumber)
  @objc public func addHappyReactionEvent()
  @objc public func addNeutralReactionEvent()
  @objc public func addSadReactionEvent(conversationOptionShown: Swift.Bool)
  @objc public func addNewConversationFromArticleEvent(accessToTeammate: Swift.Bool)
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class AvailableTeammatesView : UIKit.UIStackView {
  @objc deinit
}
@objc public protocol NativeArticleReactionsViewDelegate {
  @objc func selectedReactionIndex(_ reactionIdex: Swift.Int)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class NativeArticleReactionsView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public static var sadReactionIndex: Swift.Int
  @objc @_Concurrency.MainActor(unsafe) public static var neutralReactionIndex: Swift.Int
  @objc @_Concurrency.MainActor(unsafe) public static var happyReactionIndex: Swift.Int
  @objc @_Concurrency.MainActor(unsafe) weak public var articleDelegate: NativeArticleReactionsViewDelegate?
  @objc deinit
}
extension Intercom {
  public class func fetchHelpCenterCollections(completion: @escaping (Swift.Result<[HelpCenterCollection], ICMHelpCenterDataError>) -> Swift.Void)
  public class func fetchHelpCenterCollection(_ collectionId: Swift.String, completion: @escaping (Swift.Result<HelpCenterCollectionContent, ICMHelpCenterDataError>) -> Swift.Void)
  public class func searchHelpCenter(_ searchTerm: Swift.String, completion: @escaping (Swift.Result<[HelpCenterArticleSearchResult], ICMHelpCenterDataError>) -> Swift.Void)
}
extension UIKit.UIFont {
  @objc public static func preferredFont(forTextStyle style: UIKit.UIFont.TextStyle, weight: UIKit.UIFont.Weight) -> UIKit.UIFont
}
@objc public protocol ConversationCardInfoProtocol {
  @objc var prominantStyling: Swift.Bool { get }
  @objc var accessToTeammateEnabled: Swift.Bool { get }
  @objc var hasRecentConversations: Swift.Bool { get }
  @objc var hasOtherConversations: Swift.Bool { get }
  @objc var startConversationCardDisplayed: Swift.Bool { get }
}
@objc public class ConversationCardInfo : ObjectiveC.NSObject, ConversationCardInfoProtocol {
  @objc final public let prominantStyling: Swift.Bool
  @objc public var startConversationCardDisplayed: Swift.Bool
  @objc public var accessToTeammateEnabled: Swift.Bool {
    @objc get
  }
  @objc public var hasRecentConversations: Swift.Bool {
    @objc get
  }
  @objc public var hasOtherConversations: Swift.Bool {
    @objc get
  }
  @objc public init(prominantStyling: Swift.Bool = false, config: Intercom_Private.ICMConfigProtocol = ICMConfig.shared(), dataManager: Intercom_Private.ICMDataManagerProtocol = ICMDataManager.shared())
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class ConversationHistoryCard : ConversationCard, Intercom_Private.ICMRecentConversationsViewControllerDelegate {
  @objc @_Concurrency.MainActor(unsafe) public var recentConversationsVC: Intercom_Private.ICMRecentConversationsViewController
  @_Concurrency.MainActor(unsafe) @objc public func reloadConversationHistoryCard()
  @_Concurrency.MainActor(unsafe) @objc public func navigate(toViewController viewController: UIKit.UIViewController)
  @_Concurrency.MainActor(unsafe) @objc override public init(cardInfo: ConversationCardInfoProtocol, delegate: ConversationCardDelegate)
  @objc deinit
}
@objc public protocol ConversationCardDelegate {
  @objc func startNewConversation()
  @objc func viewPreviousConversations()
  @objc func reloadConversationHistoryCard()
  @objc func navigateToViewController(_ viewController: UIKit.UIViewController)
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class ConversationCard : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public static var maxRecentConversationsCount: Swift.Int
  @objc @_Concurrency.MainActor(unsafe) public static var viewPadding: CoreGraphics.CGFloat
  @objc @_Concurrency.MainActor(unsafe) public init(cardInfo: ConversationCardInfoProtocol, delegate: ConversationCardDelegate)
  @objc @_Concurrency.MainActor(unsafe) public func heightForCard(width: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func traitCollectionDidChange(_ previousTraitCollection: UIKit.UITraitCollection?)
  @objc deinit
}
extension ConversationCard : SeeAllConversationsViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func viewPreviousConversations()
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class HelpCenterContainerViewController : UIKit.UIViewController {
  @objc @_Concurrency.MainActor(unsafe) public convenience init(withCollections collectionIds: [Swift.String])
  @objc @_Concurrency.MainActor(unsafe) public convenience init(withCollection collectionId: Swift.String)
  @objc dynamic public init()
  @objc @_Concurrency.MainActor(unsafe) public convenience init(fromSearchBrowse: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLayoutSubviews()
  @objc deinit
}
extension HelpCenterContainerViewController : Intercom_Private.ICMErrorViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func didSelectErrorAction()
}
@objc public protocol SeeAllConversationsViewDelegate {
  @objc func viewPreviousConversations()
}
